'''
Created on 11-Oct-2020

@author: Felix
'''

# Code to produce potential/time graph of basic, inhibited, and advanced neurons

import numpy as np
import matplotlib.pyplot as plt

from Neuron import BasicNeuron
from NeuronSpikeInhibited import InhibitedNeuron
from NeuronAdvancedDecay import AdvancedNeuron

# create objects for each neuron type
basicNeuron = BasicNeuron()
inhibitedNeuron = InhibitedNeuron()
advancedNeuron = AdvancedNeuron()

# lists to store count and neuron potentials in
count = []
basicNeuronPotential, inhibitedNeuronPotential, advancedNeuronPotential = [], [], []

# input and neuron behaviour loop
for i in range(300):
    if (i % 3 == 0):
        basicNeuron.spikeIn(0.1)
        inhibitedNeuron.spikeIn(0.1)
        advancedNeuron.spikeIn(0.1)

    # save potentials to lists
    basicNeuronPotential.append(basicNeuron.getPotential())
    inhibitedNeuronPotential.append(inhibitedNeuron.getPotential())
    advancedNeuronPotential.append(advancedNeuron.getPotential())

    # update and decay neurons
    basicNeuron.updateNeuron()
    inhibitedNeuron.updateNeuron()
    advancedNeuron.updateNeuron()

    # record current step
    count.append(i)

# plot data
fig, (ax1, ax2, ax3) = plt.subplots(3, sharex=True)
ax1.plot(count, basicNeuronPotential)
ax2.plot(count, inhibitedNeuronPotential)
ax3.plot(count, advancedNeuronPotential)
ax1.set_title("Basic Neuron", loc='center', y=1)
ax2.set_title("inhibited Neuron", loc='center', y=1)
ax3.set_title("Advanced Neuron", loc='center', y=1)
plt.xlabel('Step')
plt.ylabel('Potential', y=1.7)
fig.suptitle("Neuron Behaviour with input period of 3 steps and magnitude of 0.1")
plt.show()



